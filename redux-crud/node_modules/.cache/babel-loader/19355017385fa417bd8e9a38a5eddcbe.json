{"ast":null,"code":"var _jsxFileName = \"/home/epic/Desktop/assignment/redux-crud/src/features/users/AddUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { userAdded } from \"./usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddUser() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [error, setError] = useState([]);\n\n  const handleName = e => setName(e.target.value);\n\n  const handleRank = e => setRank(e.target.value);\n\n  const {\n    entitiesContinent\n  } = useSelector(state => state.users);\n\n  const handleClick = () => {\n    // if (name && rank) {\n    const data = new FormData();\n    data.append(\"name\", name);\n    data.append(\"continent\", continent);\n    data.append(\"rank\", rank);\n    data.append('file', file);\n    fetch('http://localhost:8080/api/country', {\n      method: 'POST',\n      body: data\n    }).then(response => response.json()).then(result => {\n      setError(result);\n      console.log('Success:', result);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    console.log(\"-----------------------------------\", error);\n\n    if (error) {\n      alert(\"hee\");\n    } else {// setError(null);\n      // history.push(\"/\");\n    } // } else {\n    //   setError(\"Fill in all fields\");\n    // }\n\n\n    setName(\"\");\n    setRank(\"\");\n  };\n\n  const [continent, setContinent] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n\n  const onDrop = picture => {\n    console.log(picture[0]);\n    setFile(picture[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          name: \"name\",\n          type: \"text\",\n          id: \"nameInput\",\n          onChange: handleName,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"continentInput\",\n          children: \"Continent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"continent\",\n          value: continent,\n          onChange: e => setContinent(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select One\"\n          }, 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), entitiesContinent.length && entitiesContinent.map((x, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rankInput\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"rank\",\n          className: \"u-full-width\",\n          type: \"rank\",\n          id: \"emailInput\",\n          onChange: handleRank,\n          value: rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n          withIcon: true,\n          onChange: onDrop //  imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n          // maxFileSize={5242880}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), error && error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          className: \"button-primary\",\n          children: \"Add user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"hhNjd3d4Dt7+BDn56423KopjjWA=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/epic/Desktop/assignment/redux-crud/src/features/users/AddUser.jsx"],"names":["useDispatch","useSelector","ImageUploader","useHistory","useState","userAdded","AddUser","dispatch","history","name","setName","rank","setRank","error","setError","handleName","e","target","value","handleRank","entitiesContinent","state","users","handleClick","data","FormData","append","continent","file","fetch","method","body","then","response","json","result","console","log","catch","alert","setContinent","setFile","onDrop","picture","length","map","x","i"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { userAdded } from \"./usersSlice\";\n\nexport function AddUser() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [error, setError] = useState([]);\n\n  const handleName = (e) => setName(e.target.value);\n  const handleRank = (e) => setRank(e.target.value);\n\n  const { entitiesContinent } = useSelector((state) => state.users);\n\n\n  const handleClick = () => {\n    // if (name && rank) {\n    const data = new FormData();\n\n    data.append(\"name\", name)\n    data.append(\"continent\", continent)\n    data.append(\"rank\", rank)\n    data.append('file', file);\n    fetch('http://localhost:8080/api/country', { method: 'POST', body: data }).then(response => response.json())\n      .then(result => {\n        setError(result)\n        console.log('Success:', result);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n\n\n    console.log(\"-----------------------------------\", error)\n    if (error) {\n      alert(\"hee\")\n    } else {\n      // setError(null);\n      // history.push(\"/\");\n    }\n\n    // } else {\n    //   setError(\"Fill in all fields\");\n    // }\n\n    setName(\"\");\n    setRank(\"\");\n  };\n\n  const [continent, setContinent] = useState(\"\");\n\n  const [file, setFile] = useState(\"\");\n\n  const onDrop = picture => {\n    console.log(picture[0])\n    setFile(picture[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h1>Add Country</h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <label htmlFor=\"nameInput\">Name</label>\n          <input\n            className=\"u-full-width\"\n            name=\"name\"\n            type=\"text\"\n            id=\"nameInput\"\n            onChange={handleName}\n            value={name}\n          />\n          <label htmlFor=\"continentInput\">Continent</label>\n          <select name=\"continent\" value={continent} onChange={(e) => setContinent(e.target.value)} >\n            <option\n              key={0}\n              value={0}\n            >\n              {\"Select One\"}\n            </option>\n            {entitiesContinent.length &&\n              entitiesContinent.map((x, i) => (\n                <option\n                  key={i}\n                  value={x}\n                >\n                  {x}\n                </option>\n              ))}\n          </select>\n\n          <label htmlFor=\"rankInput\">Rank</label>\n          <input\n            name=\"rank\"\n            className=\"u-full-width\"\n            type=\"rank\"\n            id=\"emailInput\"\n            onChange={handleRank}\n            value={rank}\n          />\n          <ImageUploader\n            withIcon={true}\n            onChange={onDrop}\n          //  imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n          // maxFileSize={5242880}\n          />\n          {error && error}\n          <button onClick={handleClick} className=\"button-primary\">\n            Add user\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}