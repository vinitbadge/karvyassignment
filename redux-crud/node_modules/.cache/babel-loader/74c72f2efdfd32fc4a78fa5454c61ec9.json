{"ast":null,"code":"var _jsxFileName = \"/home/epic/Desktop/assignment/redux-crud/src/features/countrys/AddCountry.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { fetchCountrys } from \"./countrysSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddCountry() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleName = e => setName(e.target.value);\n\n  const handleRank = e => setRank(e.target.value);\n\n  const {\n    entitiesContinent\n  } = useSelector(state => state.countrys);\n\n  const handleClick = () => {\n    // if (name && rank) {\n    const data = new FormData();\n    data.append(\"name\", name);\n    data.append(\"continent\", continent);\n    data.append(\"rank\", rank);\n    data.append('file', file);\n    fetch('http://localhost:8080/api/country', {\n      method: 'POST',\n      body: data\n    }).then(response => response.json()).then(result => {\n      //console.log('Success:', result.error);\n      if (result.error && result.error.length) {\n        console.log(result.error[0]);\n        setFormErrors(result.error[0]);\n      } else {\n        setError(null);\n        setFormErrors({});\n        setName(\"\");\n        setRank(\"\");\n        dispatch(fetchCountrys());\n        history.push(\"/\");\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  const [continent, setContinent] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n\n  const onDrop = picture => {\n    setFile(picture[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          name: \"name\",\n          type: \"text\",\n          id: \"nameInput\",\n          onChange: handleName,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), formErrors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          style: {\n            color: \"red\"\n          },\n          children: [\" \", formErrors.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"continentInput\",\n          children: \"Continent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"continent\",\n          value: continent,\n          onChange: e => setContinent(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select One\"\n          }, 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), entitiesContinent.length && entitiesContinent.map((x, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), formErrors.continent && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          style: {\n            color: \"red\"\n          },\n          children: [\" \", formErrors.continent, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rankInput\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"rank\",\n          className: \"u-full-width\",\n          type: \"rank\",\n          id: \"emailInput\",\n          onChange: handleRank,\n          value: rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), formErrors.rank && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          style: {\n            color: \"red\"\n          },\n          children: [\" \", formErrors.rank, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n          withIcon: true,\n          onChange: onDrop //  imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n          // maxFileSize={5242880}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), formErrors.file && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          style: {\n            color: \"red\"\n          },\n          children: [\" \", formErrors.file, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), error && error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          className: \"button-primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCountry, \"zaxz1LGYVugEVqON44sUWMidu2g=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = AddCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCountry\");","map":{"version":3,"sources":["/home/epic/Desktop/assignment/redux-crud/src/features/countrys/AddCountry.jsx"],"names":["useDispatch","useSelector","ImageUploader","useHistory","useState","fetchCountrys","AddCountry","dispatch","history","name","setName","rank","setRank","error","setError","formErrors","setFormErrors","handleName","e","target","value","handleRank","entitiesContinent","state","countrys","handleClick","data","FormData","append","continent","file","fetch","method","body","then","response","json","result","length","console","log","push","catch","setContinent","setFile","onDrop","picture","color","map","x","i"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { fetchCountrys } from \"./countrysSlice\";\n\n\nexport function AddCountry() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleName = (e) => setName(e.target.value);\n  const handleRank = (e) => setRank(e.target.value);\n\n  const { entitiesContinent } = useSelector((state) => state.countrys);\n\n\n  const handleClick = () => {\n    // if (name && rank) {\n    const data = new FormData();\n\n    data.append(\"name\", name)\n    data.append(\"continent\", continent)\n    data.append(\"rank\", rank)\n    data.append('file', file);\n    fetch('http://localhost:8080/api/country', { method: 'POST', body: data }).then(response => response.json())\n      .then(result => {\n        //console.log('Success:', result.error);\n        if (result.error && result.error.length) {\n          console.log(result.error[0])\n          setFormErrors(result.error[0])\n        } else {\n          setError(null);\n          setFormErrors({})\n          setName(\"\");\n          setRank(\"\");\n          dispatch(fetchCountrys())\n          history.push(\"/\");\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n\n  };\n\n  const [continent, setContinent] = useState(\"\");\n\n  const [file, setFile] = useState(\"\");\n\n  const onDrop = picture => {\n    setFile(picture[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h1>Add Country</h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <label htmlFor=\"nameInput\">Name</label>\n          <input\n            className=\"u-full-width\"\n            name=\"name\"\n            type=\"text\"\n            id=\"nameInput\"\n            onChange={handleName}\n            value={name}\n          />\n          {formErrors.name && (\n            <p className=\"error\" style={{ color: \"red\" }}> {formErrors.name} </p>\n          )}\n          <label htmlFor=\"continentInput\">Continent</label>\n          <select name=\"continent\" value={continent} onChange={(e) => setContinent(e.target.value)} >\n            <option\n              key={0}\n              value={0}\n            >\n              {\"Select One\"}\n            </option>\n            {entitiesContinent.length &&\n              entitiesContinent.map((x, i) => (\n                <option\n                  key={i}\n                  value={x}\n                >\n                  {x}\n                </option>\n              ))}\n          </select>\n          {formErrors.continent && (\n            <p className=\"error\" style={{ color: \"red\" }}> {formErrors.continent} </p>\n          )}\n\n          <label htmlFor=\"rankInput\">Rank</label>\n          <input\n            name=\"rank\"\n            className=\"u-full-width\"\n            type=\"rank\"\n            id=\"emailInput\"\n            onChange={handleRank}\n            value={rank}\n          />\n          {formErrors.rank && (\n            <p className=\"error\" style={{ color: \"red\" }}> {formErrors.rank} </p>\n          )}\n          <ImageUploader\n            withIcon={true}\n            onChange={onDrop}\n          //  imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n          // maxFileSize={5242880}\n          />\n          {formErrors.file && (\n            <p className=\"error\" style={{ color: \"red\" }}> {formErrors.file} </p>\n          )}\n          {error && error}\n          <button onClick={handleClick} className=\"button-primary\">\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}