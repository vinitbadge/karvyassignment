{"ast":null,"code":"var _jsxFileName = \"/home/epic/Desktop/assignment/redux-crud/src/features/users/EditUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { userUpdated } from \"./usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditUser() {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const userId = parseInt(pathname.replace(\"/edit-user/\", \"\"));\n  const user = useSelector(state => state.users.entities.find(user => user.id === userId));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [error, setError] = useState(null);\n\n  const handleName = e => setName(e.target.value);\n\n  const handleEmail = e => setEmail(e.target.value);\n\n  const handleClick = () => {\n    if (name && email) {\n      dispatch(userUpdated({\n        id: userId,\n        name,\n        email\n      }));\n      setError(null);\n      history.push(\"/\");\n    } else {\n      setError(\"Fill in all fields\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"text\",\n          placeholder: \"test@mailbox.com\",\n          id: \"nameInput\",\n          onChange: handleName,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailInput\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"email\",\n          placeholder: \"test@mailbox.com\",\n          id: \"emailInput\",\n          onChange: handleEmail,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), error && error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          className: \"button-primary\",\n          children: \"Save user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditUser, \"wZCEp/JCN1SEBgRi2c7esOtFgxA=\", false, function () {\n  return [useLocation, useSelector, useDispatch, useHistory];\n});\n\n_c = EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/home/epic/Desktop/assignment/redux-crud/src/features/users/EditUser.jsx"],"names":["useDispatch","useSelector","useHistory","useLocation","useState","userUpdated","EditUser","pathname","userId","parseInt","replace","user","state","users","entities","find","id","dispatch","history","name","setName","email","setEmail","error","setError","handleName","e","target","value","handleEmail","handleClick","push"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { useState } from \"react\";\nimport { userUpdated } from \"./usersSlice\";\n\nexport function EditUser() {\n  const { pathname } = useLocation();\n  const userId = parseInt(pathname.replace(\"/edit-user/\", \"\"));\n\n  const user = useSelector((state) =>\n    state.users.entities.find((user) => user.id === userId)\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [error, setError] = useState(null);\n\n  const handleName = (e) => setName(e.target.value);\n  const handleEmail = (e) => setEmail(e.target.value);\n\n  const handleClick = () => {\n    if (name && email) {\n      dispatch(\n        userUpdated({\n          id: userId,\n          name,\n          email,\n        })\n      );\n\n      setError(null);\n      history.push(\"/\");\n    } else {\n      setError(\"Fill in all fields\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h1>View Country</h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <label htmlFor=\"nameInput\">Name</label>\n          <input\n            className=\"u-full-width\"\n            type=\"text\"\n            placeholder=\"test@mailbox.com\"\n            id=\"nameInput\"\n            onChange={handleName}\n            value={name}\n          />\n          <label htmlFor=\"emailInput\">Email</label>\n          <input\n            className=\"u-full-width\"\n            type=\"email\"\n            placeholder=\"test@mailbox.com\"\n            id=\"emailInput\"\n            onChange={handleEmail}\n            value={email}\n          />\n          {error && error}\n          <button onClick={handleClick} className=\"button-primary\">\n            Save user\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}