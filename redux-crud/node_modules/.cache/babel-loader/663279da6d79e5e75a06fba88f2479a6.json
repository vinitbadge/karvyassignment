{"ast":null,"code":"var _jsxFileName = \"/home/epic/Desktop/assignment/redux-crud/src/features/countrys/CountryList.jsx\",\n    _s = $RefreshSig$();\n\nimport { fetchCountrys, fetchCountrysById } from \"./countrysSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CountryList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    entities,\n    entitiesById\n  } = useSelector(state => state.countrys);\n  const loading = useSelector(state => state.loading);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  const handleCountryById = id => {\n    if (id) {\n      setSelectedOption(id);\n      dispatch(fetchCountrysById(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Country Crud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two columns\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedOption,\n          onChange: e => handleCountryById(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select One\"\n          }, 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), entities.length && entities.map(({\n            id,\n            name\n          }, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two columns\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-country\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-primary\",\n            children: \"Add Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: loading ? \"Loading...\" : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"u-full-width\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: entitiesById.length && entitiesById.map(({\n            rank,\n            name,\n            flag,\n            imagePath\n          }, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePath + flag,\n                alt: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, i ? i : \"\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountryList, \"5SqZkC66rJyO8TEb4yBwgvvXrwo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["/home/epic/Desktop/assignment/redux-crud/src/features/countrys/CountryList.jsx"],"names":["fetchCountrys","fetchCountrysById","useDispatch","useSelector","React","useState","Link","CountryList","dispatch","entities","entitiesById","state","countrys","loading","selectedOption","setSelectedOption","handleCountryById","id","e","target","value","length","map","name","i","rank","flag","imagePath"],"mappings":"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","sourcesContent":["import { fetchCountrys, fetchCountrysById } from \"./countrysSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\n\n\nimport { Link } from \"react-router-dom\";\n\nexport function CountryList() {\n  const dispatch = useDispatch();\n\n  const { entities, entitiesById } = useSelector((state) => state.countrys);\n  const loading = useSelector((state) => state.loading);\n\n\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  const handleCountryById = (id) => {\n    if (id) {\n      setSelectedOption(id)\n      dispatch(fetchCountrysById(id));\n    }\n\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h1>Country Crud</h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"two columns\">\n          <select value={selectedOption} onChange={(e) => handleCountryById(e.target.value)} >\n            <option\n              key={0}\n              value={0}\n            >\n              {\"Select One\"}\n            </option>\n            {entities.length &&\n              entities.map(({ id, name }, i) => (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              ))}\n          </select>\n          {/* <button\n            onClick={() => dispatch(fetchCountrys())}\n            className=\"button-primary\"\n          >\n            Load countrys\n          </button> */}\n        </div>\n        <div className=\"two columns\">\n          <Link to=\"/add-country\">\n            <button className=\"button-primary\">Add Country</button>\n          </Link>\n        </div>\n      </div>\n      <div className=\"row\">\n        {loading ? (\n          \"Loading...\"\n        ) : (\n          <table className=\"u-full-width\">\n            <thead>\n              <tr>\n                <th>Rank</th>\n                <th>Name</th>\n                <th>Image</th>\n              </tr>\n            </thead>\n            <tbody>\n              {entitiesById.length &&\n                entitiesById.map(({ rank, name, flag, imagePath }, i) => (\n                  <tr key={i ? i : \"\"}>\n                    <td>{rank}</td>\n                    <td>{name}</td>\n                    <td>\n                      <img src={imagePath + flag} alt={name} />\n                      {/* <button onClick={() => handleDelete(id)}>Delete</button>\n                      <Link to={`/edit-country/${rank}`}>\n                        <button>Edit</button>\n                      </Link> */}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}