{"ast":null,"code":"var _jsxFileName = \"/home/epic/Desktop/assignment/redux-crud/src/features/users/AddUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { userAdded } from \"./usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddUser() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleName = e => setName(e.target.value);\n\n  const handleRank = e => setRank(e.target.value);\n\n  const {\n    entitiesContinent\n  } = useSelector(state => state.users);\n\n  const handleClick = () => {\n    if (name && rank) {\n      dispatch(userAdded({\n        name,\n        rank\n      }));\n      setError(null);\n      history.push(\"/\");\n    } else {\n      setError(\"Fill in all fields\");\n    }\n\n    setName(\"\");\n    setRank(\"\");\n  };\n\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [pictures, setPictures] = useState([]);\n\n  const onDrop = picture => {\n    setPictures([...pictures, picture]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"text\",\n          id: \"nameInput\",\n          onChange: handleName,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"continentInput\",\n          children: \"Continent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedOption,\n          onChange: e => setSelectedOption(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Select One\"\n          }, 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), entitiesContinent.length && entitiesContinent.map((x, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rankInput\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"rank\",\n          id: \"emailInput\",\n          onChange: handleRank,\n          value: rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n          withIcon: true,\n          onChange: onDrop,\n          imgExtension: [\".jpg\", \".gif\", \".png\", \".gif\"],\n          maxFileSize: 5242880\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), error && error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          className: \"button-primary\",\n          children: \"Add user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"OADMOJdIShe3udOHKH/QTgdlEdc=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/epic/Desktop/assignment/redux-crud/src/features/users/AddUser.jsx"],"names":["useDispatch","useSelector","ImageUploader","useHistory","useState","userAdded","AddUser","dispatch","history","name","setName","rank","setRank","error","setError","handleName","e","target","value","handleRank","entitiesContinent","state","users","handleClick","push","selectedOption","setSelectedOption","pictures","setPictures","onDrop","picture","length","map","x","i"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { userAdded } from \"./usersSlice\";\n\nexport function AddUser() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleName = (e) => setName(e.target.value);\n  const handleRank = (e) => setRank(e.target.value);\n\n  const { entitiesContinent } = useSelector((state) => state.users);\n\n  const handleClick = () => {\n    if (name && rank) {\n      dispatch(\n        userAdded({\n          name,\n          rank,\n        })\n      );\n\n      setError(null);\n      history.push(\"/\");\n    } else {\n      setError(\"Fill in all fields\");\n    }\n\n    setName(\"\");\n    setRank(\"\");\n  };\n\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  const [pictures, setPictures] = useState([]);\n\n  const onDrop = picture => {\n    setPictures([...pictures, picture]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h1>Add Country</h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <label htmlFor=\"nameInput\">Name</label>\n          <input\n            className=\"u-full-width\"\n            type=\"text\"\n            id=\"nameInput\"\n            onChange={handleName}\n            value={name}\n          />\n          <label htmlFor=\"continentInput\">Continent</label>\n          <select value={selectedOption} onChange={(e) => setSelectedOption(e.target.value)} >\n            <option\n              key={0}\n              value={0}\n            >\n              {\"Select One\"}\n            </option>\n            {entitiesContinent.length &&\n              entitiesContinent.map((x, i) => (\n                <option\n                  key={i}\n                  value={x}\n                >\n                  {x}\n                </option>\n              ))}\n          </select>\n\n          <label htmlFor=\"rankInput\">Rank</label>\n          <input\n            className=\"u-full-width\"\n            type=\"rank\"\n            id=\"emailInput\"\n            onChange={handleRank}\n            value={rank}\n          />\n          <ImageUploader\n            withIcon={true}\n            onChange={onDrop}\n            imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n            maxFileSize={5242880}\n          />\n          {error && error}\n          <button onClick={handleClick} className=\"button-primary\">\n            Add user\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}